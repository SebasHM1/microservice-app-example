name: Build and Push Docker Images

# Dispara en cada push a master
on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: latest

    steps:
      # 1. Clona tu repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura Buildx (permite multi-plataforma, cache, etc.)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Login a DockerHub usando el secret DOCKERHUB_* que ya creaste
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4. Build y push de cada servicio

      - name: Build & push auth-api
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth-api:${IMAGE_TAG} ./auth-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth-api:${IMAGE_TAG}

      - name: Build & push users-api
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/users-api:${IMAGE_TAG} ./users-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/users-api:${IMAGE_TAG}

      - name: Build & push todos-api
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todos-api:${IMAGE_TAG} ./todos-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todos-api:${IMAGE_TAG}

      - name: Build & push log-message-processor
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/log-message-processor:${IMAGE_TAG} ./log-message-processor
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/log-message-processor:${IMAGE_TAG}

      - name: Build & push frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${IMAGE_TAG} ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${IMAGE_TAG}
          
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-api, users-api, todos-api, log-message-processor, frontend]
    steps:
      - name: Deploy ${{ matrix.service }}
        uses: bervProject/railway-deploy@main
        with:
          railway_token: ${{ secrets.RAILWAY_API_TOKEN }}
          service: ${{ matrix.service }}
